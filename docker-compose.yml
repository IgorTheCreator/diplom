services:
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    networks:
      - metrics
    ports:
      - '9080:9080'
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail-config.yaml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    privileged: true

  loki:
    image: grafana/loki:latest
    container_name: loki
    networks:
      - metrics
    ports:
      - '3100:3100'
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    networks:
      - metrics
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks:
      - metrics
    ports:
      - '3000:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grafanadata:/var/lib/grafana

  db:
    image: bitnami/postgresql:17.5.0
    container_name: ${DB_CONTAINER_NAME}
    environment:
      - POSTGRESQL_USERNAME=${DB_USERNAME}
      - POSTGRESQL_PASSWORD=${DB_PASSWORD}
      - POSTGRESQL_DATABASE=${DB_NAME}
    volumes:
      - db_data_new:/bitnami/postgresql
    ports:
      - ${DB_PORT}:5432
    restart: unless-stopped
    networks:
      - app

  cache:
    image: redis:latest
    container_name: ${CACHE_CONTAINER_NAME}
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD=${CACHE_PASSWORD}
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD --maxmemory 100mb --maxmemory-policy volatile-lru"
    ports:
      - ${CACHE_PORT}:6379
    volumes:
      - cache_data:/data
    networks:
      - app

  app:
    container_name: ${APP_CONTAINER_NAME}
    build: ./nestjs-project
    volumes:
      - app_data:/data/app
    networks:
      - app
      - metrics
    depends_on:
      - db
      - cache
    environment:
      - APP_PORT=${APP_PORT}
      - DB_URL=${DB_URL}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_TOKEN_VALID=${JWT_TOKEN_VALID}
      - REFRESH_TOKEN_VALID=${REFRESH_TOKEN_VALID}
      - CACHE_PASSWORD=${CACHE_PASSWORD}
      - CACHE_PORT=${CACHE_PORT}
      - CACHE_HOST=${CACHE_HOST}
    ports:
      - '${APP_PORT}:${APP_PORT}'
    logging:
      driver: json-file
      options:
        tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'

volumes:
  grafanadata:
  prometheusdata:
  db_data_new:
  cache_data:
  app_data:

networks:
  app:
  metrics:
